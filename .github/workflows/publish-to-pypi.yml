on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build wheels
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/manylinux_2_28_x86_64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup submodules
        run: |
          git config --global --add safe.directory '*'
          git submodule update --init --recursive

      - name: Build for Python3.8
        run: |
          python3.8 -m pip install --upgrade pip
          python3.8 -m pip  install wheel setuptools pip --upgrade
          python3.8 -m pip  install -r requirements.txt
          python3.8 -m pip  install build twine
          python3.8 -m build --wheel --outdir dist/ .
  

      - name: Build for Python3.9
        run: |
          python3.9 -m pip install --upgrade pip
          python3.9 -m pip  install wheel setuptools pip --upgrade
          python3.9 -m pip  install -r requirements.txt
          python3.9 -m pip  install build twine
          python3.9 -m build --wheel --outdir dist/ .

      - name: Build for Python3.10
        run: |
          python3.10 -m pip install --upgrade pip
          python3.10 -m pip  install wheel setuptools pip --upgrade
          python3.10 -m pip  install -r requirements.txt
          python3.10 -m pip  install build twine
          python3.10 -m build --wheel --outdir dist/ .

      - name: Build for Python3.11
        run: |
          python3.11 -m pip install --upgrade pip
          python3.11 -m pip  install wheel setuptools pip --upgrade
          python3.11 -m pip  install -r requirements.txt
          python3.11 -m pip  install build twine
          python3.11 -m build --wheel --outdir dist/ .

      - name: Build for Python3.12
        run: |
          python3.12 -m pip install --upgrade pip
          python3.12 -m pip  install wheel setuptools pip --upgrade
          python3.12 -m pip  install -r requirements.txt
          python3.12 -m pip  install build twine
          python3.12 -m build --wheel --outdir dist/ .

      - name: Clean up dist
        run: |
          cd dist/
          find . ! -name 'random_events*' -type f -exec rm -f {} +
          cd ..

      - name: Repair wheel
        run: |
          auditwheel repair dist/*.whl
          mkdir -p wheelhouse
          mv wheelhouse/*.whl dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-dist
          path: dist/

  pypi-publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: pypi
      url: https://pypi.org/p/random-events
    permissions:
      id-token: write  # required for trusted publishing
    steps:
      - name: Download built dist
        uses: actions/download-artifact@v4
        with:
          name: built-dist
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: false
          verbose: 'true'
